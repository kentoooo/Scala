<statements>
<statement><source>/Users/okamurakento/Desktop/Scala_workspace/scala-study/AppliedCourse/09/scala-fp/src/main/scala/Calc.scala</source><package>&lt;empty&gt;</package><class>Calc</class><classType>Class</classType><topLevelClass>Calc</topLevelClass><method>isPrime</method><path>/Users/okamurakento/Desktop/Scala_workspace/scala-study/AppliedCourse/09/scala-fp/src/main/scala/Calc.scala</path><id>17</id><start>528</start><end>538</end><line>19</line><description>n.%(x$3).==(0)</description><symbolName>scala.Int.==</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>/Users/okamurakento/Desktop/Scala_workspace/scala-study/AppliedCourse/09/scala-fp/src/main/scala/Calc.scala</source><package>&lt;empty&gt;</package><class>Calc</class><classType>Class</classType><topLevelClass>Calc</topLevelClass><method>div</method><path>/Users/okamurakento/Desktop/Scala_workspace/scala-study/AppliedCourse/09/scala-fp/src/main/scala/Calc.scala</path><id>8</id><start>279</start><end>279</end><line>14</line><description>()</description><symbolName>&lt;nosymbol&gt;</symbolName><treeName>Block</treeName><branch>true</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>/Users/okamurakento/Desktop/Scala_workspace/scala-study/AppliedCourse/09/scala-fp/src/main/scala/Calc.scala</source><package>&lt;empty&gt;</package><class>Calc</class><classType>Class</classType><topLevelClass>Calc</topLevelClass><method>isPrime</method><path>/Users/okamurakento/Desktop/Scala_workspace/scala-study/AppliedCourse/09/scala-fp/src/main/scala/Calc.scala</path><id>11</id><start>474</start><end>479</end><line>19</line><description>n.&lt;(2)</description><symbolName>scala.Int.&lt;</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>/Users/okamurakento/Desktop/Scala_workspace/scala-study/AppliedCourse/09/scala-fp/src/main/scala/Calc.scala</source><package>&lt;empty&gt;</package><class>Calc</class><classType>Class</classType><topLevelClass>Calc</topLevelClass><method>sum</method><path>/Users/okamurakento/Desktop/Scala_workspace/scala-study/AppliedCourse/09/scala-fp/src/main/scala/Calc.scala</path><id>2</id><start>135</start><end>140</end><line>7</line><description>x$1.+(x$2)</description><symbolName>scala.Int.+</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>/Users/okamurakento/Desktop/Scala_workspace/scala-study/AppliedCourse/09/scala-fp/src/main/scala/Calc.scala</source><package>&lt;empty&gt;</package><class>Calc</class><classType>Class</classType><topLevelClass>Calc</topLevelClass><method>div</method><path>/Users/okamurakento/Desktop/Scala_workspace/scala-study/AppliedCourse/09/scala-fp/src/main/scala/Calc.scala</path><id>5</id><start>300</start><end>341</end><line>14</line><description>throw new java.this.lang.ArithmeticException(&quot;/by zero&quot;)</description><symbolName>&lt;nosymbol&gt;</symbolName><treeName>Throw</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>/Users/okamurakento/Desktop/Scala_workspace/scala-study/AppliedCourse/09/scala-fp/src/main/scala/Calc.scala</source><package>&lt;empty&gt;</package><class>Calc</class><classType>Class</classType><topLevelClass>Calc</topLevelClass><method>isPrime</method><path>/Users/okamurakento/Desktop/Scala_workspace/scala-study/AppliedCourse/09/scala-fp/src/main/scala/Calc.scala</path><id>14</id><start>495</start><end>496</end><line>19</line><description>2</description><symbolName>&lt;nosymbol&gt;</symbolName><treeName>Literal</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>/Users/okamurakento/Desktop/Scala_workspace/scala-study/AppliedCourse/09/scala-fp/src/main/scala/Calc.scala</source><package>&lt;empty&gt;</package><class>Calc</class><classType>Class</classType><topLevelClass>Calc</topLevelClass><method>div</method><path>/Users/okamurakento/Desktop/Scala_workspace/scala-study/AppliedCourse/09/scala-fp/src/main/scala/Calc.scala</path><id>4</id><start>282</start><end>298</end><line>14</line><description>demominator.==(0)</description><symbolName>scala.Int.==</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>/Users/okamurakento/Desktop/Scala_workspace/scala-study/AppliedCourse/09/scala-fp/src/main/scala/Calc.scala</source><package>&lt;empty&gt;</package><class>Calc</class><classType>Class</classType><topLevelClass>Calc</topLevelClass><method>isPrime</method><path>/Users/okamurakento/Desktop/Scala_workspace/scala-study/AppliedCourse/09/scala-fp/src/main/scala/Calc.scala</path><id>13</id><start>481</start><end>486</end><line>19</line><description>false</description><symbolName>&lt;nosymbol&gt;</symbolName><treeName>Block</treeName><branch>true</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>/Users/okamurakento/Desktop/Scala_workspace/scala-study/AppliedCourse/09/scala-fp/src/main/scala/Calc.scala</source><package>&lt;empty&gt;</package><class>Calc</class><classType>Class</classType><topLevelClass>Calc</topLevelClass><method>isPrime</method><path>/Users/okamurakento/Desktop/Scala_workspace/scala-study/AppliedCourse/09/scala-fp/src/main/scala/Calc.scala</path><id>16</id><start>500</start><end>518</end><line>19</line><description>java.this.lang.Math.sqrt(n.toDouble).toInt</description><symbolName>scala.Double.toInt</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>/Users/okamurakento/Desktop/Scala_workspace/scala-study/AppliedCourse/09/scala-fp/src/main/scala/Calc.scala</source><package>&lt;empty&gt;</package><class>Calc</class><classType>Class</classType><topLevelClass>Calc</topLevelClass><method>div</method><path>/Users/okamurakento/Desktop/Scala_workspace/scala-study/AppliedCourse/09/scala-fp/src/main/scala/Calc.scala</path><id>7</id><start>279</start><end>279</end><line>14</line><description>()</description><symbolName>&lt;nosymbol&gt;</symbolName><treeName>Literal</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>/Users/okamurakento/Desktop/Scala_workspace/scala-study/AppliedCourse/09/scala-fp/src/main/scala/Calc.scala</source><package>&lt;empty&gt;</package><class>Calc</class><classType>Class</classType><topLevelClass>Calc</topLevelClass><method>sum</method><path>/Users/okamurakento/Desktop/Scala_workspace/scala-study/AppliedCourse/09/scala-fp/src/main/scala/Calc.scala</path><id>1</id><start>132</start><end>133</end><line>7</line><description>0</description><symbolName>&lt;nosymbol&gt;</symbolName><treeName>Literal</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>/Users/okamurakento/Desktop/Scala_workspace/scala-study/AppliedCourse/09/scala-fp/src/main/scala/Calc.scala</source><package>&lt;empty&gt;</package><class>Calc</class><classType>Class</classType><topLevelClass>Calc</topLevelClass><method>div</method><path>/Users/okamurakento/Desktop/Scala_workspace/scala-study/AppliedCourse/09/scala-fp/src/main/scala/Calc.scala</path><id>10</id><start>346</start><end>385</end><line>15</line><description>numerator.toDouble./(demominator.toDouble)</description><symbolName>scala.Double./</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>/Users/okamurakento/Desktop/Scala_workspace/scala-study/AppliedCourse/09/scala-fp/src/main/scala/Calc.scala</source><package>&lt;empty&gt;</package><class>Calc</class><classType>Class</classType><topLevelClass>Calc</topLevelClass><method>isPrime</method><path>/Users/okamurakento/Desktop/Scala_workspace/scala-study/AppliedCourse/09/scala-fp/src/main/scala/Calc.scala</path><id>19</id><start>492</start><end>540</end><line>19</line><description>scala.this.Predef.intWrapper(2).to(java.this.lang.Math.sqrt(n.toDouble).toInt).exists(((x$3: Int) =&gt; n.%(x$3).==(0))).unary_!</description><symbolName>scala.Boolean.unary_!</symbolName><treeName>Block</treeName><branch>true</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>/Users/okamurakento/Desktop/Scala_workspace/scala-study/AppliedCourse/09/scala-fp/src/main/scala/Calc.scala</source><package>&lt;empty&gt;</package><class>Calc</class><classType>Class</classType><topLevelClass>Calc</topLevelClass><method>isPrime</method><path>/Users/okamurakento/Desktop/Scala_workspace/scala-study/AppliedCourse/09/scala-fp/src/main/scala/Calc.scala</path><id>18</id><start>492</start><end>540</end><line>19</line><description>scala.this.Predef.intWrapper(2).to(java.this.lang.Math.sqrt(n.toDouble).toInt).exists(((x$3: Int) =&gt; n.%(x$3).==(0))).unary_!</description><symbolName>scala.Boolean.unary_!</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>/Users/okamurakento/Desktop/Scala_workspace/scala-study/AppliedCourse/09/scala-fp/src/main/scala/Calc.scala</source><package>&lt;empty&gt;</package><class>Calc</class><classType>Class</classType><topLevelClass>Calc</topLevelClass><method>div</method><path>/Users/okamurakento/Desktop/Scala_workspace/scala-study/AppliedCourse/09/scala-fp/src/main/scala/Calc.scala</path><id>9</id><start>365</start><end>385</end><line>15</line><description>demominator.toDouble</description><symbolName>scala.Int.toDouble</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>/Users/okamurakento/Desktop/Scala_workspace/scala-study/AppliedCourse/09/scala-fp/src/main/scala/Calc.scala</source><package>&lt;empty&gt;</package><class>Calc</class><classType>Class</classType><topLevelClass>Calc</topLevelClass><method>sum</method><path>/Users/okamurakento/Desktop/Scala_workspace/scala-study/AppliedCourse/09/scala-fp/src/main/scala/Calc.scala</path><id>3</id><start>119</start><end>141</end><line>7</line><description>seq.foldLeft[Int](0)(((x$1: Int, x$2: Int) =&gt; x$1.+(x$2)))</description><symbolName>scala.collection.TraversableOnce.foldLeft</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>/Users/okamurakento/Desktop/Scala_workspace/scala-study/AppliedCourse/09/scala-fp/src/main/scala/Calc.scala</source><package>&lt;empty&gt;</package><class>Calc</class><classType>Class</classType><topLevelClass>Calc</topLevelClass><method>isPrime</method><path>/Users/okamurakento/Desktop/Scala_workspace/scala-study/AppliedCourse/09/scala-fp/src/main/scala/Calc.scala</path><id>12</id><start>481</start><end>486</end><line>19</line><description>false</description><symbolName>&lt;nosymbol&gt;</symbolName><treeName>Literal</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>/Users/okamurakento/Desktop/Scala_workspace/scala-study/AppliedCourse/09/scala-fp/src/main/scala/Calc.scala</source><package>&lt;empty&gt;</package><class>Calc</class><classType>Class</classType><topLevelClass>Calc</topLevelClass><method>isPrime</method><path>/Users/okamurakento/Desktop/Scala_workspace/scala-study/AppliedCourse/09/scala-fp/src/main/scala/Calc.scala</path><id>15</id><start>510</start><end>511</end><line>19</line><description>n.toDouble</description><symbolName>scala.Int.toDouble</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>/Users/okamurakento/Desktop/Scala_workspace/scala-study/AppliedCourse/09/scala-fp/src/main/scala/Calc.scala</source><package>&lt;empty&gt;</package><class>Calc</class><classType>Class</classType><topLevelClass>Calc</topLevelClass><method>div</method><path>/Users/okamurakento/Desktop/Scala_workspace/scala-study/AppliedCourse/09/scala-fp/src/main/scala/Calc.scala</path><id>6</id><start>300</start><end>341</end><line>14</line><description>throw new java.this.lang.ArithmeticException(&quot;/by zero&quot;)</description><symbolName>&lt;nosymbol&gt;</symbolName><treeName>Block</treeName><branch>true</branch><count>0</count><ignored>false</ignored></statement>
</statements>